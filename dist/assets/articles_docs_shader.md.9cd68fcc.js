import{_ as s,o as a,c as n,S as l}from"./chunks/framework.f15d8f8c.js";const o="/assets/test01.2afdf2cb.png",d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/docs/shader.md","filePath":"articles/docs/shader.md"}'),p={name:"articles/docs/shader.md"},e=l(`<p>shader也称<code>着色器</code>.着色器分为<code>顶点着色器</code>和<code>片元着色器</code>.</p><h2 id="第一个程序" tabindex="-1">第一个程序 <a class="header-anchor" href="#第一个程序" aria-label="Permalink to &quot;第一个程序&quot;">​</a></h2><p>示例：<br> html布局如下：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">grid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">canvas</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">width</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">700</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">canvas</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xaxis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yaxis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> el </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> gl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> el</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getContext</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webgl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建顶点着色器</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> vertexShader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createShader</span><span style="color:#A6ACCD;">(gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VERTEX_SHADER)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shaderSource</span><span style="color:#A6ACCD;">(vertexShader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">    precision mediump float;</span></span>
<span class="line"><span style="color:#C3E88D;">    attribute vec2 a_Position;</span></span>
<span class="line"><span style="color:#C3E88D;">    void main(){</span></span>
<span class="line"><span style="color:#C3E88D;">        gl_Position = vec4(a_Position,0.0, 1.0);</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compileShader</span><span style="color:#A6ACCD;">(vertexShader)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建片元着色器</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> fragmentShader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createShader</span><span style="color:#A6ACCD;">(gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FRAGMENT_SHADER)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shaderSource</span><span style="color:#A6ACCD;">(fragmentShader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">    precision mediump float;      </span></span>
<span class="line"><span style="color:#C3E88D;">    void main(){</span></span>
<span class="line"><span style="color:#C3E88D;">        if(gl_FragCoord.x&gt;500.0){</span></span>
<span class="line"><span style="color:#C3E88D;">            gl_FragColor = vec4(1.0,0.0,0.0,1.0);</span></span>
<span class="line"><span style="color:#C3E88D;">        }else{</span></span>
<span class="line"><span style="color:#C3E88D;">            gl_FragColor = vec4(0.0,1.0,0.0,1.0);</span></span>
<span class="line"><span style="color:#C3E88D;">        }</span></span>
<span class="line"><span style="color:#C3E88D;">        </span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compileShader</span><span style="color:#A6ACCD;">(fragmentShader)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建程序</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> program </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createProgram</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//将顶点着色器挂载在着色器程序上。</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">attachShader</span><span style="color:#A6ACCD;">(program</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> vertexShader)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//将片元着色器挂载在着色器程序上。</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">attachShader</span><span style="color:#A6ACCD;">(program</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> fragmentShader)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//链接着色器程序</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">linkProgram</span><span style="color:#A6ACCD;">(program)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">useProgram</span><span style="color:#A6ACCD;">(program)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createBuffer</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 通过类型化数组来传递数据给webgl</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">([</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,-</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,-</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bindBuffer</span><span style="color:#A6ACCD;">(gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ARRAY_BUFFER</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">buffer)</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bufferData</span><span style="color:#A6ACCD;">(gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ARRAY_BUFFER</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">STATIC_DRAW)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a_position_pointer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribLocation</span><span style="color:#A6ACCD;">(program</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a_Position</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">vertexAttribPointer</span><span style="color:#A6ACCD;">(a_position_pointer</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FLOAT</span><span style="color:#89DDFF;">,</span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enableVertexAttribArray</span><span style="color:#A6ACCD;">(a_position_pointer)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 绘制三角形</span></span>
<span class="line"><span style="color:#A6ACCD;">gl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawArrays</span><span style="color:#A6ACCD;">(gl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TRIANGLES</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p><img src="`+o+'" alt=""></p><h2 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-label="Permalink to &quot;基础语法&quot;">​</a></h2><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h2><h2 id="宏" tabindex="-1">宏 <a class="header-anchor" href="#宏" aria-label="Permalink to &quot;宏&quot;">​</a></h2><h2 id="常用函数" tabindex="-1">常用函数 <a class="header-anchor" href="#常用函数" aria-label="Permalink to &quot;常用函数&quot;">​</a></h2><h2 id="length" tabindex="-1">length <a class="header-anchor" href="#length" aria-label="Permalink to &quot;length&quot;">​</a></h2><h2 id="distance" tabindex="-1">distance <a class="header-anchor" href="#distance" aria-label="Permalink to &quot;distance&quot;">​</a></h2><h2 id="step" tabindex="-1">step <a class="header-anchor" href="#step" aria-label="Permalink to &quot;step&quot;">​</a></h2><h2 id="smoothstep" tabindex="-1">smoothstep <a class="header-anchor" href="#smoothstep" aria-label="Permalink to &quot;smoothstep&quot;">​</a></h2><h2 id="dot" tabindex="-1">dot <a class="header-anchor" href="#dot" aria-label="Permalink to &quot;dot&quot;">​</a></h2>',15),t=[e];function r(c,D,F,y,A,C){return a(),n("div",null,t)}const h=s(p,[["render",r]]);export{d as __pageData,h as default};
